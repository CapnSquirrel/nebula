Nebula {
    Program         =  newline* (Object newline*)* newline*
    Object          =  Construct | Trait
    Construct       =  constructLabel Argument* Location+ newline Block?
    Trait           =  traitLabel Argument* newline Block?
    Block           =  indent Object+ dedent newline?
    constructLabel  =  "Origin" | "Result" | "Link" | "Accessor" | "Argument"
                    |  "Function" | "Conditional" | "Parameter" | "Control" 
                    | "Return" | "Yield" | "Error"
    traitLabel      =  "access" | "initialize" | "evaluate"
    Argument        =  id | type | strlit | numlit | boollit
    Location        =  "(" Coordinate ")" | "<" Coordinate ">"
    Coordinate      =  NonemptyListOf<numlit, ",">

    keyword         =  ( constructLabel | traitLabel | type | boollit ) ~idrest
    id              =  ~keyword ("_" | letter) idrest*
    type            =  "number" | "string" | "boolean" | "void"
    idrest          =  "_" | alnum
    numlit          =  "-"? digit+ ("." digit+)?
    strlit          =  "\"" (~"\\" ~"\"" ~"\n" any | escape)* "\""
    boollit         =  "true" | "false"
    escape          =  "\\" ( "\'" | "\"" | "r" | "n" | "\\" | "u")      -- simple
                    |  "\\u" hexDigit hexDigit hexDigit hexDigit         -- codepoint
    indent          =  "⇨"
    dedent          =  "⇦"

    newline         =  "\n"+
    space           :=  " " | "\t" | comment
    comment         =  "#" (~"\n" any)*
}
